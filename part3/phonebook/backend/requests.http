# Course part 3 done on IntelliJ IDEA Ultimate, API tested using IDE's HTTP Client Tool

### Base check
# 200
GET http://localhost:3001/

### View info
# 200: Returns <p>Phonebook has info for ${totalPeople} people</p><p>${timeStamp}</p>
GET http://localhost:3001/info

### Get all persons
# 200: List of all persons
GET http://localhost:3001/api/persons

### Get single person with mongodb-compliant ID:65163e767eef022d49038758
# 200: JSON of single person {name, number, id:65163e767eef022d49038758}
GET http://localhost:3001/api/persons/65163e767eef022d49038758

### Get non-existent person with mongo-compliant ID:65163e767eef022d49038750
# 404
GET http://localhost:3001/api/persons/65163e767eef022d49038750

### Get non-existent person with non-compliant mongo ID:totallynotcompliantid
# 400: "error": "malformatted id"
GET http://localhost:3001/api/persons/totallynotcompliantid

### Create new person without name in body
# 400: "error": "Person validation failed: name: Path `name` is required."
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "number": "01234567899"
}

### Create new person without number in body
# 400: "error": "number missing"
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "name": "Intellij HTTP Client"
}

### Create new person with provided body items
# 200: JSON of created person with {name, number, id}
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "name": "Intellij HTTP Client {{$timestamp}}",
  "number": "01234567899"
}

### Create new person with same name (Run after creating person with provided parameters)
# 400: "error": "Intellij HTTP Client already exists. Name must be unique"
POST http://localhost:3001/api/persons
Content-Type: application/json

{
  "name": "Intellij HTTP Client",
  "number": "{{$timestamp}}"
}

### Update person with different invalid number for ID: 6516f56c3a5d7ccebcb53ffa
# 400: "error": "Validation failed: number: Invalid phone number format"
PUT http://localhost:3001/api/persons/6516f56c3a5d7ccebcb53ffa
Content-Type: application/json

{
  "name": "Put endpoint tester",
  "number": "{{$timestamp}}"
}

### Update person with different valid number for ID: 6516f56c3a5d7ccebcb53ffa
# 200: JSON of updated person with {name: Put endpoint tester, number, id}
PUT http://localhost:3001/api/persons/6516f56c3a5d7ccebcb53ffa
Content-Type: application/json

{
  "name": "Put endpoint tester",
  "number": "040-22{{$random.integer(0,10)}}{{$random.integer(0,10)}}{{$random.integer(0,10)}}{{$random.integer(0,10)}}{{$random.integer(0,10)}}{{$random.integer(0,10)}}"
}

### Delete existing/non-existing person with compliant mongo ID:6516f56c3a5d7ccebcb53fff
# 204
DELETE http://localhost:3001/api/persons/6516f56c3a5d7ccebcb53fff

### Delete existing/non-existing person with non-compliant mongo ID:noncompliantID
# 400: "error": "malformatted id"
DELETE http://localhost:3001/api/persons/noncompliantID
